{"version":3,"sources":["webpack:///page-component---src-pages-examples-async-validation-js-35b3f4ba8ca5eb650fa2.js","webpack:///./src/pages/examples/async-validation.js"],"names":["webpackJsonp","./node_modules/babel-loader/lib/index.js?{\"presets\":[\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-es2015/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-1/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-env/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-0/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\"],\"plugins\":[\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/examples/async-validation.js","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_reactDripForm","_reactDripFormComponents","_components","Validator","registerAsyncRule","Promise","resolve","reject","whiteList","setTimeout","indexOf","AsyncValidationForm","dripForm","validations","username","required","between","min","max","alphaNumeric","lowercase","checkValidAccount","displayName","_ref","handlers","_ref$meta","meta","invalid","pristine","validating","createElement","onSubmit","htmlFor","Input","type","id","name","label","Button","primary","onClick","disabled","BasicFormExample","_Component","_ref2","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","state","values","_this2","location","Layout","title","href","onChange","v","setState","onValidSubmit","alert","console","log","Code","language","JSON","stringify","Component"],"mappings":"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","file":"page-component---src-pages-examples-async-validation-js-35b3f4ba8ca5eb650fa2.js","sourcesContent":["webpackJsonp([35],{\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"presets\\\":[\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-es2015/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-1/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-env/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\\\"],\\\"plugins\\\":[\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/examples/async-validation.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDripForm = __webpack_require__(\"../src/index.js\");\n\t\n\tvar _reactDripFormComponents = __webpack_require__(\"./node_modules/react-drip-form-components/lib/index.js\");\n\t\n\tvar _components = __webpack_require__(\"./src/components/index.js\");\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-alert */\n\t/* eslint-disable import/extensions */\n\t/* eslint-disable import/no-unresolved */\n\t/* eslint-disable import/no-extraneous-dependencies */\n\t\n\t\n\t// Simulate API\n\t_reactDripForm.Validator.registerAsyncRule('checkValidAccount', function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    var whiteList = ['foo', 'bar', 'baz'];\n\t\n\t    setTimeout(function () {\n\t      if (whiteList.indexOf(value) > -1) {\n\t        resolve();\n\t      } else {\n\t        reject('Invalid account!');\n\t      }\n\t    }, 1000);\n\t  });\n\t});\n\t\n\tvar AsyncValidationForm = (0, _reactDripForm.dripForm)({\n\t  validations: {\n\t    username: {\n\t      required: true,\n\t      between: {\n\t        min: 3,\n\t        max: 30\n\t      },\n\t      alphaNumeric: true,\n\t      lowercase: true,\n\t      checkValidAccount: true\n\t    },\n\t    displayName: {\n\t      required: true\n\t    }\n\t  }\n\t})(function (_ref) {\n\t  var handlers = _ref.handlers,\n\t      _ref$meta = _ref.meta,\n\t      invalid = _ref$meta.invalid,\n\t      pristine = _ref$meta.pristine,\n\t      validating = _ref$meta.validating;\n\t  return _react2.default.createElement(\n\t    'form',\n\t    { onSubmit: handlers.onSubmit },\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'username' },\n\t        'Username'\n\t      ),\n\t      _react2.default.createElement(_reactDripFormComponents.Input, {\n\t        type: 'text',\n\t        id: 'username',\n\t        name: 'username',\n\t        label: 'Username'\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'displayName' },\n\t        'Display Name'\n\t      ),\n\t      _react2.default.createElement(_reactDripFormComponents.Input, {\n\t        type: 'text',\n\t        id: 'displayName',\n\t        name: 'displayName',\n\t        label: 'Display Name'\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      _components.Button,\n\t      {\n\t        primary: true,\n\t        onClick: handlers.onSubmit,\n\t        disabled: invalid || pristine || validating\n\t      },\n\t      'Submit'\n\t    )\n\t  );\n\t});\n\t\n\tvar BasicFormExample = function (_Component) {\n\t  _inherits(BasicFormExample, _Component);\n\t\n\t  function BasicFormExample() {\n\t    var _ref2;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BasicFormExample);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = BasicFormExample.__proto__ || Object.getPrototypeOf(BasicFormExample)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {\n\t      values: {}\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(BasicFormExample, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var location = this.props.location;\n\t      var values = this.state.values;\n\t\n\t\n\t      return _react2.default.createElement(\n\t        _components.Layout,\n\t        {\n\t          title: 'Async Validation',\n\t          location: location\n\t        },\n\t        _react2.default.createElement(\n\t          'p',\n\t          null,\n\t          'This is an example of asynchronous validations.',\n\t          _react2.default.createElement('br', null),\n\t          _react2.default.createElement(\n\t            'a',\n\t            { href: 'https://github.com/tsuyoshiwada/drip-form-validator' },\n\t            'drip-form-validator'\n\t          ),\n\t          ' can register asynchronous validation with the ',\n\t          _react2.default.createElement(\n\t            'code',\n\t            null,\n\t            'registerAsyncRule()'\n\t          ),\n\t          ' method.'\n\t        ),\n\t        _react2.default.createElement(\n\t          'p',\n\t          null,\n\t          'Asynchronous validation is performed under the following conditions.'\n\t        ),\n\t        _react2.default.createElement(\n\t          'ul',\n\t          null,\n\t          _react2.default.createElement(\n\t            'li',\n\t            null,\n\t            'If all synchronous verification corresponding to ',\n\t            _react2.default.createElement(\n\t              'code',\n\t              null,\n\t              'name'\n\t            ),\n\t            ' has passed'\n\t          ),\n\t          _react2.default.createElement(\n\t            'li',\n\t            null,\n\t            'When the ',\n\t            _react2.default.createElement(\n\t              'code',\n\t              null,\n\t              'input.onBlur()'\n\t            ),\n\t            ' was executed'\n\t          )\n\t        ),\n\t        _react2.default.createElement('hr', null),\n\t        _react2.default.createElement(\n\t          'h3',\n\t          null,\n\t          'Example:'\n\t        ),\n\t        _react2.default.createElement(AsyncValidationForm, {\n\t          onChange: function onChange(v) {\n\t            return _this2.setState({ values: v });\n\t          },\n\t          onValidSubmit: function onValidSubmit(v) {\n\t            alert('See console');\n\t            console.log(v);\n\t          }\n\t        }),\n\t        _react2.default.createElement('hr', null),\n\t        _react2.default.createElement(\n\t          'h3',\n\t          null,\n\t          'Values:'\n\t        ),\n\t        _react2.default.createElement(\n\t          _components.Code,\n\t          { language: 'javascript' },\n\t          JSON.stringify(values, null, 2)\n\t        ),\n\t        _react2.default.createElement('hr', null),\n\t        _react2.default.createElement(\n\t          'h3',\n\t          null,\n\t          'Sample Code:'\n\t        ),\n\t        _react2.default.createElement(\n\t          _components.Code,\n\t          { language: 'javascript' },\n\t          'import React from \\'react\\';\\nimport { dripForm, Validator } from \\'react-drip-form\\';\\nimport { Input } from \\'react-drip-form-components\\';\\n\\n\\n// Simulate API\\nValidator.registerAsyncRule(\\'checkValidAccount\\', value => new Promise((resolve, reject) => {\\n  const whiteList = [\\'foo\\', \\'bar\\', \\'baz\\'];\\n\\n  setTimeout(() => {\\n    if (whiteList.indexOf(value) > -1) {\\n      resolve();\\n    } else {\\n      reject(\\'Invalid account!\\');\\n    }\\n  }, 1000);\\n}));\\n\\n\\nconst AsyncValidationForm = dripForm({\\n  validations: {\\n    username: {\\n      required: true,\\n      between: {\\n        min: 3,\\n        max: 30,\\n      },\\n      alphaNumeric: true,\\n      lowercase: true,\\n      checkValidAccount: true,\\n    },\\n    displayName: {\\n      required: true,\\n    },\\n  },\\n})(({\\n  handlers,\\n  meta: { invalid, pristine, validating },\\n}) => (\\n  <form onSubmit={handlers.onSubmit}>\\n    <div>\\n      <label htmlFor=\"username\">Username</label>\\n      <Input\\n        type=\"text\"\\n        id=\"username\"\\n        name=\"username\"\\n        label=\"Username\"\\n      />\\n    </div>\\n\\n    <div>\\n      <label htmlFor=\"displayName\">Display Name</label>\\n      <Input\\n        type=\"text\"\\n        id=\"displayName\"\\n        name=\"displayName\"\\n        label=\"Display Name\"\\n      />\\n    </div>\\n\\n    <Button\\n      primary\\n      onClick={handlers.onSubmit}\\n      disabled={invalid || pristine || validating}\\n    >\\n      Submit\\n    </Button>\\n  </form>\\n));'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BasicFormExample;\n\t}(_react.Component);\n\t\n\texports.default = BasicFormExample;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// page-component---src-pages-examples-async-validation-js-35b3f4ba8ca5eb650fa2.js","/* eslint-disable no-alert */\n/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { Component } from 'react';\nimport { dripForm, Validator } from 'react-drip-form';\nimport { Input } from 'react-drip-form-components';\nimport { Layout, Button, Code } from '../../components/';\n\n\n// Simulate API\nValidator.registerAsyncRule('checkValidAccount', value => new Promise((resolve, reject) => {\n  const whiteList = ['foo', 'bar', 'baz'];\n\n  setTimeout(() => {\n    if (whiteList.indexOf(value) > -1) {\n      resolve();\n    } else {\n      reject('Invalid account!');\n    }\n  }, 1000);\n}));\n\n\nconst AsyncValidationForm = dripForm({\n  validations: {\n    username: {\n      required: true,\n      between: {\n        min: 3,\n        max: 30,\n      },\n      alphaNumeric: true,\n      lowercase: true,\n      checkValidAccount: true,\n    },\n    displayName: {\n      required: true,\n    },\n  },\n})(({\n  handlers,\n  meta: { invalid, pristine, validating },\n}) => (\n  <form onSubmit={handlers.onSubmit}>\n    <div>\n      <label htmlFor=\"username\">Username</label>\n      <Input\n        type=\"text\"\n        id=\"username\"\n        name=\"username\"\n        label=\"Username\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"displayName\">Display Name</label>\n      <Input\n        type=\"text\"\n        id=\"displayName\"\n        name=\"displayName\"\n        label=\"Display Name\"\n      />\n    </div>\n\n    <Button\n      primary\n      onClick={handlers.onSubmit}\n      disabled={invalid || pristine || validating}\n    >\n      Submit\n    </Button>\n  </form>\n));\n\n\nexport default class BasicFormExample extends Component {\n  state = {\n    values: {},\n  };\n\n  render() {\n    const { location } = this.props;\n    const { values } = this.state;\n\n    return (\n      <Layout\n        title=\"Async Validation\"\n        location={location}\n      >\n        <p>\n          This is an example of asynchronous validations.<br />\n          <a href=\"https://github.com/tsuyoshiwada/drip-form-validator\">drip-form-validator</a> can register asynchronous validation with the <code>registerAsyncRule()</code> method.\n        </p>\n\n        <p>Asynchronous validation is performed under the following conditions.</p>\n        <ul>\n          <li>If all synchronous verification corresponding to <code>name</code> has passed</li>\n          <li>When the <code>input.onBlur()</code> was executed</li>\n        </ul>\n\n        <hr />\n\n        <h3>Example:</h3>\n        <AsyncValidationForm\n          onChange={v => this.setState({ values: v })}\n          onValidSubmit={(v) => {\n            alert('See console');\n            console.log(v);\n          }}\n        />\n\n        <hr />\n\n        <h3>Values:</h3>\n        <Code language=\"javascript\">{JSON.stringify(values, null, 2)}</Code>\n        <hr />\n\n        <h3>Sample Code:</h3>\n        <Code language=\"javascript\">{`import React from 'react';\nimport { dripForm, Validator } from 'react-drip-form';\nimport { Input } from 'react-drip-form-components';\n\n\n// Simulate API\nValidator.registerAsyncRule('checkValidAccount', value => new Promise((resolve, reject) => {\n  const whiteList = ['foo', 'bar', 'baz'];\n\n  setTimeout(() => {\n    if (whiteList.indexOf(value) > -1) {\n      resolve();\n    } else {\n      reject('Invalid account!');\n    }\n  }, 1000);\n}));\n\n\nconst AsyncValidationForm = dripForm({\n  validations: {\n    username: {\n      required: true,\n      between: {\n        min: 3,\n        max: 30,\n      },\n      alphaNumeric: true,\n      lowercase: true,\n      checkValidAccount: true,\n    },\n    displayName: {\n      required: true,\n    },\n  },\n})(({\n  handlers,\n  meta: { invalid, pristine, validating },\n}) => (\n  <form onSubmit={handlers.onSubmit}>\n    <div>\n      <label htmlFor=\"username\">Username</label>\n      <Input\n        type=\"text\"\n        id=\"username\"\n        name=\"username\"\n        label=\"Username\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"displayName\">Display Name</label>\n      <Input\n        type=\"text\"\n        id=\"displayName\"\n        name=\"displayName\"\n        label=\"Display Name\"\n      />\n    </div>\n\n    <Button\n      primary\n      onClick={handlers.onSubmit}\n      disabled={invalid || pristine || validating}\n    >\n      Submit\n    </Button>\n  </form>\n));`}</Code>\n      </Layout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/examples/async-validation.js"],"sourceRoot":""}