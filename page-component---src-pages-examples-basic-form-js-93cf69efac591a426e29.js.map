{"version":3,"sources":["webpack:///page-component---src-pages-examples-basic-form-js-93cf69efac591a426e29.js","webpack:///./src/pages/examples/basic-form.js"],"names":["webpackJsonp","./node_modules/babel-loader/lib/index.js?{\"presets\":[\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-es2015/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-1/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-es2015/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-0/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\"],\"plugins\":[\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/styled-jsx/babel.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/examples/basic-form.js","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_src","_components","_fields","BasicForm","dripForm","validations","name","required","max","username","alphaNumeric","email","emailConfirm","same","gender","job","subject","confirm","message","_ref","handlers","_ref$meta","meta","invalid","pristine","createElement","onSubmit","htmlFor","Input","type","id","label","placeholder","FieldGroup","Radio","multiple","Checkbox","Select","Textarea","href","Button","primary","onClick","disabled","BasicFormExample","_Component","_ref2","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","state","values","_this2","location","Layout","title","onChange","v","setState","onValidSubmit","alert","console","log","Code","language","JSON","stringify","Component"],"mappings":"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","file":"page-component---src-pages-examples-basic-form-js-93cf69efac591a426e29.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"presets\\\":[\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-es2015/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-1/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-es2015/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-preset-react/lib/index.js\\\"],\\\"plugins\\\":[\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/styled-jsx/babel.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/tsuyoshiwada/develop/react-drip-form/www/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/examples/basic-form.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _src = __webpack_require__(\"../src/index.js\");\n\t\n\tvar _components = __webpack_require__(\"./src/components/index.js\");\n\t\n\tvar _fields = __webpack_require__(\"./src/fields/index.js\");\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable max-len */\n\t/* eslint-disable no-alert */\n\t/* eslint-disable react/prop-types */\n\t/* eslint-disable jsx-a11y/href-no-hash */\n\t/* eslint-disable jsx-a11y/label-has-for */\n\t\n\t\n\tvar BasicForm = (0, _src.dripForm)({\n\t  validations: {\n\t    name: {\n\t      required: true,\n\t      max: 32\n\t    },\n\t    username: {\n\t      required: true,\n\t      max: 255,\n\t      alphaNumeric: true\n\t    },\n\t    email: {\n\t      required: true,\n\t      email: true\n\t    },\n\t    emailConfirm: {\n\t      same: 'email'\n\t    },\n\t    gender: {\n\t      required: true\n\t    },\n\t    job: {\n\t      max: 3\n\t    },\n\t    subject: {\n\t      required: true\n\t    },\n\t    confirm: {\n\t      required: true\n\t    },\n\t    message: {\n\t      max: 500\n\t    }\n\t  }\n\t})(function (_ref) {\n\t  var handlers = _ref.handlers,\n\t      _ref$meta = _ref.meta,\n\t      invalid = _ref$meta.invalid,\n\t      pristine = _ref$meta.pristine;\n\t  return _react2.default.createElement(\n\t    'form',\n\t    { onSubmit: handlers.onSubmit },\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'name' },\n\t        'Name'\n\t      ),\n\t      _react2.default.createElement(_fields.Input, {\n\t        type: 'text',\n\t        id: 'name',\n\t        name: 'name',\n\t        label: 'Name'\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'username' },\n\t        'Username'\n\t      ),\n\t      _react2.default.createElement(_fields.Input, {\n\t        type: 'text',\n\t        id: 'username',\n\t        name: 'username',\n\t        label: 'Username',\n\t        placeholder: 'enter-your-username'\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'email' },\n\t        'Email-Address'\n\t      ),\n\t      _react2.default.createElement(_fields.Input, {\n\t        type: 'email',\n\t        id: 'email',\n\t        name: 'email',\n\t        label: 'Email-Address',\n\t        placeholder: 'example@mail.com'\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'emailConfirm' },\n\t        'Email-Address (Confirm)'\n\t      ),\n\t      _react2.default.createElement(_fields.Input, {\n\t        type: 'email',\n\t        id: 'emailConfirm',\n\t        name: 'emailConfirm',\n\t        label: 'Email-Address (Confirm)'\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        null,\n\t        'Gender'\n\t      ),\n\t      _react2.default.createElement(\n\t        _fields.FieldGroup,\n\t        { name: 'gender' },\n\t        _react2.default.createElement(\n\t          _fields.Radio,\n\t          { value: 'female' },\n\t          'Female'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Radio,\n\t          { value: 'male' },\n\t          'Male'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Radio,\n\t          { value: 'other' },\n\t          'Other'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Radio,\n\t          { value: 'none' },\n\t          'Rather not say'\n\t        )\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        null,\n\t        'Job (Optional)'\n\t      ),\n\t      _react2.default.createElement(\n\t        _fields.FieldGroup,\n\t        { name: 'job', multiple: true },\n\t        _react2.default.createElement(\n\t          _fields.Checkbox,\n\t          { value: 'frontend-engineer' },\n\t          'Front-end Engineer'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Checkbox,\n\t          { value: 'backend-engineer' },\n\t          'Back-end Engineer'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Checkbox,\n\t          { value: 'software-engineer' },\n\t          'Software Engineer'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Checkbox,\n\t          { value: 'ui-designer' },\n\t          'UI Designer'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Checkbox,\n\t          { value: 'ux-designer' },\n\t          'UX Designer'\n\t        ),\n\t        _react2.default.createElement(\n\t          _fields.Checkbox,\n\t          { value: 'graphic-designer' },\n\t          'Graphic Designer'\n\t        )\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'subject' },\n\t        'Subject'\n\t      ),\n\t      _react2.default.createElement(\n\t        _fields.Select,\n\t        {\n\t          id: 'subject',\n\t          name: 'subject',\n\t          label: 'Subject'\n\t        },\n\t        _react2.default.createElement(\n\t          'option',\n\t          { value: '' },\n\t          'Please select a subject'\n\t        ),\n\t        _react2.default.createElement(\n\t          'option',\n\t          { value: 'option1' },\n\t          'Option 1'\n\t        ),\n\t        _react2.default.createElement(\n\t          'option',\n\t          { value: 'option2' },\n\t          'Option 2'\n\t        ),\n\t        _react2.default.createElement(\n\t          'option',\n\t          { value: 'option3' },\n\t          'Option 3'\n\t        )\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'message' },\n\t        'Message (Optional)'\n\t      ),\n\t      _react2.default.createElement(_fields.Textarea, {\n\t        id: 'message',\n\t        name: 'message',\n\t        label: 'Message'\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        _fields.Checkbox,\n\t        {\n\t          name: 'confirm',\n\t          value: 'yes'\n\t        },\n\t        'I agree to the ',\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: '#' },\n\t          'Terms of Use'\n\t        )\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _components.Button,\n\t      {\n\t        primary: true,\n\t        onClick: handlers.onSubmit,\n\t        disabled: invalid || pristine\n\t      },\n\t      'Send message'\n\t    )\n\t  );\n\t});\n\t\n\tvar BasicFormExample = function (_Component) {\n\t  _inherits(BasicFormExample, _Component);\n\t\n\t  function BasicFormExample() {\n\t    var _ref2;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BasicFormExample);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = BasicFormExample.__proto__ || Object.getPrototypeOf(BasicFormExample)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {\n\t      values: {}\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(BasicFormExample, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var location = this.props.location;\n\t      var values = this.state.values;\n\t\n\t\n\t      return _react2.default.createElement(\n\t        _components.Layout,\n\t        {\n\t          title: 'Basic Form',\n\t          location: location\n\t        },\n\t        _react2.default.createElement(\n\t          'p',\n\t          null,\n\t          'It is an example of the most basic form with validation.',\n\t          _react2.default.createElement('br', null),\n\t          'Even if we implement real-time validation with a large number of Fields, it is a good looking code!',\n\t          _react2.default.createElement('br', null),\n\t          'And the point to admire is that the form component is Stateless.'\n\t        ),\n\t        _react2.default.createElement(\n\t          'p',\n\t          null,\n\t          'Each Field Component uses the ',\n\t          _react2.default.createElement(\n\t            'a',\n\t            { href: '#todo' },\n\t            'react-drip-form-components'\n\t          ),\n\t          ' package.',\n\t          _react2.default.createElement('br', null),\n\t          'Of course it is a simple design and easy to use, but it will be a reference for the implementation of custom Field Component.'\n\t        ),\n\t        _react2.default.createElement('hr', null),\n\t        _react2.default.createElement(\n\t          'h3',\n\t          null,\n\t          'Example:'\n\t        ),\n\t        _react2.default.createElement(BasicForm, {\n\t          values: values,\n\t          onChange: function onChange(v) {\n\t            return _this2.setState({ values: v });\n\t          },\n\t          onValidSubmit: function onValidSubmit(v) {\n\t            alert('See console');\n\t            console.log(v);\n\t          }\n\t        }),\n\t        _react2.default.createElement('hr', null),\n\t        _react2.default.createElement(\n\t          'h3',\n\t          null,\n\t          'Values:'\n\t        ),\n\t        _react2.default.createElement(\n\t          _components.Code,\n\t          { language: 'javascript' },\n\t          JSON.stringify(values, null, 2)\n\t        ),\n\t        _react2.default.createElement('hr', null),\n\t        _react2.default.createElement(\n\t          'h3',\n\t          null,\n\t          'Sample Code:'\n\t        ),\n\t        _react2.default.createElement(\n\t          _components.Code,\n\t          { language: 'javascript' },\n\t          'import React from \\'react\\';\\nimport { dripForm } from \\'react-drip-form\\';\\n\\nconst BasicForm = dripForm({\\n  validations: {\\n    name: {\\n      required: true,\\n      max: 32,\\n    },\\n    username: {\\n      required: true,\\n      max: 255,\\n      alphaNumeric: true,\\n    },\\n    email: {\\n      required: true,\\n      email: true,\\n    },\\n    emailConfirm: {\\n      same: \\'email\\',\\n    },\\n    gender: {\\n      required: true,\\n    },\\n    job: {\\n      max: 3,\\n    },\\n    subject: {\\n      required: true,\\n    },\\n    confirm: {\\n      required: true,\\n    },\\n    message: {\\n      max: 500,\\n    },\\n  },\\n})(({\\n  handlers,\\n  meta: { invalid, pristine },\\n}) => (\\n  <form onSubmit={handlers.onSubmit}>\\n    <div>\\n      <label htmlFor=\"name\">Name</label>\\n      <Input\\n        type=\"text\"\\n        id=\"name\"\\n        name=\"name\"\\n        label=\"Name\"\\n      />\\n    </div>\\n\\n    <div>\\n      <label htmlFor=\"username\">Username</label>\\n      <Input\\n        type=\"text\"\\n        id=\"username\"\\n        name=\"username\"\\n        label=\"Username\"\\n        placeholder=\"enter-your-username\"\\n      />\\n    </div>\\n\\n    <div>\\n      <label htmlFor=\"email\">Email-Address</label>\\n      <Input\\n        type=\"email\"\\n        id=\"email\"\\n        name=\"email\"\\n        label=\"Email-Address\"\\n        placeholder=\"example@mail.com\"\\n      />\\n    </div>\\n\\n    <div>\\n      <label htmlFor=\"emailConfirm\">Email-Address (Confirm)</label>\\n      <Input\\n        type=\"email\"\\n        id=\"emailConfirm\"\\n        name=\"emailConfirm\"\\n        label=\"Email-Address (Confirm)\"\\n      />\\n    </div>\\n\\n    <div>\\n      <label>Gender</label>\\n      <FieldGroup name=\"gender\">\\n        <Radio value=\"female\">Female</Radio>\\n        <Radio value=\"male\">Male</Radio>\\n        <Radio value=\"other\">Other</Radio>\\n        <Radio value=\"none\">Rather not say</Radio>\\n      </FieldGroup>\\n    </div>\\n\\n    <div>\\n      <label>Job (Optional)</label>\\n      <FieldGroup name=\"job\" multiple>\\n        <Checkbox value=\"frontend-engineer\">Front-end Engineer</Checkbox>\\n        <Checkbox value=\"backend-engineer\">Back-end Engineer</Checkbox>\\n        <Checkbox value=\"software-engineer\">Software Engineer</Checkbox>\\n        <Checkbox value=\"ui-designer\">UI Designer</Checkbox>\\n        <Checkbox value=\"ux-designer\">UX Designer</Checkbox>\\n        <Checkbox value=\"graphic-designer\">Graphic Designer</Checkbox>\\n      </FieldGroup>\\n    </div>\\n\\n    <div>\\n      <label htmlFor=\"subject\">Subject</label>\\n      <Select\\n        id=\"subject\"\\n        name=\"subject\"\\n        label=\"Subject\"\\n      >\\n        <option value=\"\">Please select a subject</option>\\n        <option value=\"option1\">Option 1</option>\\n        <option value=\"option2\">Option 2</option>\\n        <option value=\"option3\">Option 3</option>\\n      </Select>\\n    </div>\\n\\n    <div>\\n      <label htmlFor=\"message\">Message (Optional)</label>\\n      <Textarea\\n        id=\"message\"\\n        name=\"message\"\\n        label=\"Message\"\\n      />\\n    </div>\\n\\n    <div>\\n      <Checkbox\\n        name=\"confirm\"\\n        value=\"yes\"\\n      >\\n        I agree to the <a href=\"#\">Terms of Use</a>\\n      </Checkbox>\\n    </div>\\n\\n    <Button\\n      onClick={handlers.onSubmit}\\n      disabled={invalid || pristine}\\n    >\\n      Send message\\n    </Button>\\n  </form>\\n));'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BasicFormExample;\n\t}(_react.Component);\n\t\n\texports.default = BasicFormExample;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// page-component---src-pages-examples-basic-form-js-93cf69efac591a426e29.js","/* eslint-disable max-len */\n/* eslint-disable no-alert */\n/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/href-no-hash */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { Component } from 'react';\nimport { dripForm } from '../../../../src/';\nimport { Layout, Button, Code } from '../../components/';\nimport {\n  Input,\n  FieldGroup,\n  Textarea,\n  Select,\n  Checkbox,\n  Radio,\n} from '../../fields/';\n\n\nconst BasicForm = dripForm({\n  validations: {\n    name: {\n      required: true,\n      max: 32,\n    },\n    username: {\n      required: true,\n      max: 255,\n      alphaNumeric: true,\n    },\n    email: {\n      required: true,\n      email: true,\n    },\n    emailConfirm: {\n      same: 'email',\n    },\n    gender: {\n      required: true,\n    },\n    job: {\n      max: 3,\n    },\n    subject: {\n      required: true,\n    },\n    confirm: {\n      required: true,\n    },\n    message: {\n      max: 500,\n    },\n  },\n})(({\n  handlers,\n  meta: { invalid, pristine },\n}) => (\n  <form onSubmit={handlers.onSubmit}>\n    <div>\n      <label htmlFor=\"name\">Name</label>\n      <Input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"username\">Username</label>\n      <Input\n        type=\"text\"\n        id=\"username\"\n        name=\"username\"\n        label=\"Username\"\n        placeholder=\"enter-your-username\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"email\">Email-Address</label>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        label=\"Email-Address\"\n        placeholder=\"example@mail.com\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"emailConfirm\">Email-Address (Confirm)</label>\n      <Input\n        type=\"email\"\n        id=\"emailConfirm\"\n        name=\"emailConfirm\"\n        label=\"Email-Address (Confirm)\"\n      />\n    </div>\n\n    <div>\n      <label>Gender</label>\n      <FieldGroup name=\"gender\">\n        <Radio value=\"female\">Female</Radio>\n        <Radio value=\"male\">Male</Radio>\n        <Radio value=\"other\">Other</Radio>\n        <Radio value=\"none\">Rather not say</Radio>\n      </FieldGroup>\n    </div>\n\n    <div>\n      <label>Job (Optional)</label>\n      <FieldGroup name=\"job\" multiple>\n        <Checkbox value=\"frontend-engineer\">Front-end Engineer</Checkbox>\n        <Checkbox value=\"backend-engineer\">Back-end Engineer</Checkbox>\n        <Checkbox value=\"software-engineer\">Software Engineer</Checkbox>\n        <Checkbox value=\"ui-designer\">UI Designer</Checkbox>\n        <Checkbox value=\"ux-designer\">UX Designer</Checkbox>\n        <Checkbox value=\"graphic-designer\">Graphic Designer</Checkbox>\n      </FieldGroup>\n    </div>\n\n    <div>\n      <label htmlFor=\"subject\">Subject</label>\n      <Select\n        id=\"subject\"\n        name=\"subject\"\n        label=\"Subject\"\n      >\n        <option value=\"\">Please select a subject</option>\n        <option value=\"option1\">Option 1</option>\n        <option value=\"option2\">Option 2</option>\n        <option value=\"option3\">Option 3</option>\n      </Select>\n    </div>\n\n    <div>\n      <label htmlFor=\"message\">Message (Optional)</label>\n      <Textarea\n        id=\"message\"\n        name=\"message\"\n        label=\"Message\"\n      />\n    </div>\n\n    <div>\n      <Checkbox\n        name=\"confirm\"\n        value=\"yes\"\n      >\n        I agree to the <a href=\"#\">Terms of Use</a>\n      </Checkbox>\n    </div>\n\n    <Button\n      primary\n      onClick={handlers.onSubmit}\n      disabled={invalid || pristine}\n    >\n      Send message\n    </Button>\n  </form>\n));\n\n\nexport default class BasicFormExample extends Component {\n  state = {\n    values: {},\n  };\n\n  render() {\n    const { location } = this.props;\n    const { values } = this.state;\n\n    return (\n      <Layout\n        title=\"Basic Form\"\n        location={location}\n      >\n        <p>\n          It is an example of the most basic form with validation.<br />\n          Even if we implement real-time validation with a large number of Fields, it is a good looking code!<br />\n          And the point to admire is that the form component is Stateless.\n        </p>\n        <p>\n          Each Field Component uses the <a href=\"#todo\">react-drip-form-components</a> package.<br />\n          Of course it is a simple design and easy to use, but it will be a reference for the implementation of custom Field Component.\n        </p>\n        <hr />\n\n        <h3>Example:</h3>\n        <BasicForm\n          values={values}\n          onChange={v => this.setState({ values: v })}\n          onValidSubmit={(v) => {\n            alert('See console');\n            console.log(v);\n          }}\n        />\n        <hr />\n\n        <h3>Values:</h3>\n        <Code language=\"javascript\">{JSON.stringify(values, null, 2)}</Code>\n        <hr />\n\n        <h3>Sample Code:</h3>\n        <Code language=\"javascript\">{`import React from 'react';\nimport { dripForm } from 'react-drip-form';\n\nconst BasicForm = dripForm({\n  validations: {\n    name: {\n      required: true,\n      max: 32,\n    },\n    username: {\n      required: true,\n      max: 255,\n      alphaNumeric: true,\n    },\n    email: {\n      required: true,\n      email: true,\n    },\n    emailConfirm: {\n      same: 'email',\n    },\n    gender: {\n      required: true,\n    },\n    job: {\n      max: 3,\n    },\n    subject: {\n      required: true,\n    },\n    confirm: {\n      required: true,\n    },\n    message: {\n      max: 500,\n    },\n  },\n})(({\n  handlers,\n  meta: { invalid, pristine },\n}) => (\n  <form onSubmit={handlers.onSubmit}>\n    <div>\n      <label htmlFor=\"name\">Name</label>\n      <Input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"username\">Username</label>\n      <Input\n        type=\"text\"\n        id=\"username\"\n        name=\"username\"\n        label=\"Username\"\n        placeholder=\"enter-your-username\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"email\">Email-Address</label>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        label=\"Email-Address\"\n        placeholder=\"example@mail.com\"\n      />\n    </div>\n\n    <div>\n      <label htmlFor=\"emailConfirm\">Email-Address (Confirm)</label>\n      <Input\n        type=\"email\"\n        id=\"emailConfirm\"\n        name=\"emailConfirm\"\n        label=\"Email-Address (Confirm)\"\n      />\n    </div>\n\n    <div>\n      <label>Gender</label>\n      <FieldGroup name=\"gender\">\n        <Radio value=\"female\">Female</Radio>\n        <Radio value=\"male\">Male</Radio>\n        <Radio value=\"other\">Other</Radio>\n        <Radio value=\"none\">Rather not say</Radio>\n      </FieldGroup>\n    </div>\n\n    <div>\n      <label>Job (Optional)</label>\n      <FieldGroup name=\"job\" multiple>\n        <Checkbox value=\"frontend-engineer\">Front-end Engineer</Checkbox>\n        <Checkbox value=\"backend-engineer\">Back-end Engineer</Checkbox>\n        <Checkbox value=\"software-engineer\">Software Engineer</Checkbox>\n        <Checkbox value=\"ui-designer\">UI Designer</Checkbox>\n        <Checkbox value=\"ux-designer\">UX Designer</Checkbox>\n        <Checkbox value=\"graphic-designer\">Graphic Designer</Checkbox>\n      </FieldGroup>\n    </div>\n\n    <div>\n      <label htmlFor=\"subject\">Subject</label>\n      <Select\n        id=\"subject\"\n        name=\"subject\"\n        label=\"Subject\"\n      >\n        <option value=\"\">Please select a subject</option>\n        <option value=\"option1\">Option 1</option>\n        <option value=\"option2\">Option 2</option>\n        <option value=\"option3\">Option 3</option>\n      </Select>\n    </div>\n\n    <div>\n      <label htmlFor=\"message\">Message (Optional)</label>\n      <Textarea\n        id=\"message\"\n        name=\"message\"\n        label=\"Message\"\n      />\n    </div>\n\n    <div>\n      <Checkbox\n        name=\"confirm\"\n        value=\"yes\"\n      >\n        I agree to the <a href=\"#\">Terms of Use</a>\n      </Checkbox>\n    </div>\n\n    <Button\n      onClick={handlers.onSubmit}\n      disabled={invalid || pristine}\n    >\n      Send message\n    </Button>\n  </form>\n));`}</Code>\n      </Layout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/examples/basic-form.js"],"sourceRoot":""}